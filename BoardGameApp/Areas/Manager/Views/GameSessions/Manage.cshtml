@using BoardGameApp.Web.ViewModels.Manager.GameSessions
@model IEnumerable<ManageGameSessionViewModel>

@{
    var hours = Enumerable.Range(10, 13).ToList(); 
}

<style>
    .hour-selection {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
        position: relative;
        margin-bottom: 10px;
        background-color: #d7ecff;
        padding: 12px;
        border-radius: 12px;
    }

    .circle-hour {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #eee;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        font-weight: bold;
        border: 2px solid transparent;
        transition: border 0.2s ease;
    }

        .circle-hour.selected {
            border: 2px solid #007bff;
            background-color: #dbeafe;
        }

    .pawn {
        position: absolute;
        width: 30px;
        height: 30px;
        top: -35px;
        transition: left 0.3s ease;
    }

    .save-button {
        padding: 8px 14px;
        background-color: #007bff;
        border: none;
        color: white;
        border-radius: 8px;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .save-button:hover {
            background-color: #0056b3;
            transform: scale(1.05);
        }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 30px;
    }

        table tbody tr td:first-child {
            background-color: white;
            font-weight: 600; 
            padding-left: 10px;
        }
    th, td {
        padding: 12px;
        border-bottom: 1px solid #ccc;
        text-align: center;
    }

    h2 {
        text-align: center;
        margin-bottom: 20px;
    }
</style>

<h1><strong>Manage Game Sessions</strong></h1>
<div style="display: flex; justify-content: flex-end; margin-bottom: 20px;">
    <a asp-action="Create" asp-controller="GameSessions" class="btn btn-success">
        ➕ Add new GameSession
    </a>
</div>
<table>
    <thead>
        <tr>
            <th>Game Title</th>
            <th>Start Time</th>
            <th>End Time</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var game in Model)
        {
            var gameId = game.BoardGameId;
            <tr>
                <td><h6><strong>@game.BoardGameTitle</strong></h6></td>

                <td>
                    <div class="hour-selection" id="start-group-@gameId">
                        <img src="/images/locationpawn.png" class="pawn" style="left:0;" id="pawn-start-@gameId" />
                        @foreach (var hour in hours)
                        {
                            var selected = (game.StartTime?.Hour ?? 10) == hour ? "selected" : "";
                            <div class="circle-hour @selected" data-gameid="@gameId" data-type="start" data-hour="@hour">
                                @hour
                            </div>
                        }
                    </div>
                </td>

                <td>
                    <div class="hour-selection" id="end-group-@gameId">
                        <img src="/images/locationpawn.png" class="pawn" style="left:0;" id="pawn-end-@gameId" />
                        @foreach (var hour in hours)
                        {
                            var selected = (game.EndTime?.Hour ?? 22) == hour ? "selected" : "";
                            <div class="circle-hour @selected" data-gameid="@gameId" data-type="end" data-hour="@hour">
                                @hour
                            </div>
                        }
                    </div>
                </td>                
                <td>                    
                    <form id="form-@gameId" method="post" asp-controller="GameSessions" asp-action="Save">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="BoardGameId" value="@gameId" />
                        <input type="hidden" name="StartTime" id="input-start-@gameId" value="@(game.StartTime?.Hour ?? 10)" />
                        <input type="hidden" name="EndTime" id="input-end-@gameId" value="@(game.EndTime?.Hour ?? 22)" />
                        <button class="save-button" type="submit">💾 Save</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    document.querySelectorAll(".circle-hour").forEach(circle => {
        circle.addEventListener("click", function () {
            const hour = this.dataset.hour;
            const gameId = this.dataset.gameid;
            const type = this.dataset.type;

            
            const inputId = `input-${type}-${gameId}`;
            document.getElementById(inputId).value = hour;

            
            const pawn = document.getElementById(`pawn-${type}-${gameId}`);
            const parent = this.parentElement;
            const rect = this.getBoundingClientRect();
            const parentRect = parent.getBoundingClientRect();
            const offsetLeft = rect.left - parentRect.left;
            pawn.style.left = `${offsetLeft}px`;

            
            parent.querySelectorAll(".circle-hour").forEach(c => c.classList.remove("selected"));
            this.classList.add("selected");
        });
    });

    
    window.addEventListener("load", () => {
        document.querySelectorAll(".circle-hour.selected").forEach(circle => {
            const gameId = circle.dataset.gameid;
            const type = circle.dataset.type;
            const pawn = document.getElementById(`pawn-${type}-${gameId}`);
            const parent = circle.parentElement;
            const rect = circle.getBoundingClientRect();
            const parentRect = parent.getBoundingClientRect();
            const offsetLeft = rect.left - parentRect.left;
            pawn.style.left = `${offsetLeft}px`;
        });
    });
</script>